int global;
int arr[10];

/*
int test1(int i, int j, int k) {
	while (i < j) {
		int mid;
		mid = (i + j) / 2;
		if (mid == k) {
			return mid;
		} 
		if (mid < k) {
			i = mid + 1;
		} else {
			j = mid - 1;
		}
	}
	return i;
} */

void quickSort(int l, int r) {
	if (l >= r) {
		return;
	}

	int x;
	x = arr[l + (r - l) / 2];
	int i;
	int j;
	i = l - 1;
	j = r + 1;
	while (i < j) {
		i = i+1;
		while (arr[i] < x) {
			i = i+1;
		}
		j=j-1;
		while (arr[j] > x) {
			j = j-1;
		}
		if (i < j) {
			int k;
			k = arr[i];
			arr[i] = arr[j];
			arr[j] = k;
		}
	}
	quickSort(l,j);
	quickSort(j+1,r);
	return;
}

int main() {
	int l;
	int r;
	l = 0;
	r = 9;
	global = 9;
	while (global >= 0) {
		arr[9-global] = global;
		global = global - 1;
	}
	quickSort(l,r);
	
	return 0;
}